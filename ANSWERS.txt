Part I:

Threads control using wait/notify. Producer/Consumer
Execute and check how the program works, Execute jVisualVM and inspect the CPU use of the corresponding process.
1.	What is the reason of this CPU consumption?
		Los procesos y subprocesos que estan ejecutandose son lo
		que produce el consumo de la CPU.
	What is the class responsable of that consumption?
		La clase StartProduction porque es el subproceso principal, las clases Producer y 
		consumer porque son subprocesos que son ejecutados por StartProduction.

2. Write some code in order to solve the CPU's use problems , having in mind  that for
now the production is slow and the consumption is fast, check that the CPU consumption has decreased.

	Durmiendo al consumidor podemos bajar el consumo de la CPU, ya que este deja
	de preguntar constantemente si hay algun elemento en la cola, del 12% de consumo
	de la CPU, pasa a un 0.7%.


PART II. 2

2. Check the code and identify how the indicated funcionality was implemented.
Given the purpose of the game, an invariant should be that the sum of the life
points of all the players always be the same.(Of course, in a moment of time
when an operation of increase / reduction of time is not in process). For that
case, for N players, what should be that value?

En éste caso hay 3 inmortales, y cada uno de ellos tiene 100 puntos de vida,
la suma de toda la vida de todos debería estar en 300.

La suma deberia dar siempre N*100.

3. Run the application and verify how the "pause and check" option works,
is the invariant satisfied?

El invariante no se satisface ya que los puntos de vida van variando
constantemente, y el valor de la suma no es 300(N*100).


5.Verify again the functionality clicking many times. Is the invariant satisfied?

El invariante no se cumple, los suma total de puntos de los inmortales
no siempre es 300.


10.

Analizing how the simulation works. this could create a race condition?
Implement the functionality , run the simulation and observe what problem
is presented when there are many inmortals.

No hay ninguna condición de carrera ya que cuando muere el inmortal (los puntos
de vida son <= 0 ), no comparte ninguna información con algun otro hilo,
cuándo muere simplemente terminamos el hilo, y cada hilo sabe cómo terminarse solo.







